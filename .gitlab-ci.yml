stages:
  - build
  - test
  - deploy

# variables:
#     CYPRESS_CACHE_FOLDER: '$CI_PROJECT_DIR/cache/Cypress'

# cache:
#   key:
#     files:
#       - pnpm-lock.yaml
#   paths:
#     - .pnpm-store
#     - cache/Cypress
#     - node_modules
#     - dist


default:
  image: cypress/browsers:node-20.9.0-chrome-118.0.5993.88-1-ff-118.0.2-edge-118.0.2088.46-1

.standard-before_script:
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-8 --activate
    - pnpm config set store-dir .pnpm-store
.standard-rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'  # Run for all changes to a merge request's source branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH       # Run for all changes to the default branch


## Install npm dependencies and Cypress
build-job:
  stage: build
  extends:
    - .standard-before_script
    - .standard-rules
  script:
    - pnpm install
    - pnpm run build
  artifacts:
    paths:
      - "dist/"

ui-chrome-tests:
  stage: test
  dependencies:
    - build-job
  # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
  # in GitLab repo → Settings → CI/CD → Variables
  variables:
    CYPRESS_RECORD_KEY: $CYPRESS_RECORD_KEY
  parallel: 2 # Uses 2 parallel instances
  extends:
    - .standard-before_script
    - .standard-rules
  script:
    - pnpm install
    - pnpm run test:e2e:record

pages:
  stage: deploy
  image: busybox
  dependencies:
    - build-job
  script:
    - mv dist/ public/
  artifacts:
    paths:
      - "public/"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH      # Run for all changes to the default branch only
